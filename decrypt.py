from cryptography.hazmat.primitives.ciphers.aead import AESGCM
import binascii

# Ensure the nonce is 12 bytes (24 hex characters)
shared_secret = binascii.unhexlify('6da611e59d0c808e006bf7de55bef90416fbe79c5e30ef9ae163c24369644a3d')
nonce = binascii.unhexlify('3dc76296ea63f2ea3159c4XX')  # Replace XX with the missing hex characters
ciphertext = binascii.unhexlify('5a7a00eb202c0443197d6e8b1e1490c2b5d996bfc74d0798509c028c3ec5e6accecc8be1f846b2303f31b6c77a802902f922f3b8858681108081b08715f701ba823aa33045b72d92626b2651283e1b5556ca5fd7cb7578c6e11866babae3e0bb7a1b490f56c6ceb26f7eac0239a0d8bcd81ea6a171b86359ad80f63bd2a6dcfe7722d6a506556796e9bf0e7eceb26af9a6bde12527e3449b2f8d23dad0ffa53b0625e022bdf488cfa5d8ffd36ceff8972ed7d2d907321a3d091da97ca3150db46bf60e21162d66c43876fe09627835dc090acf491e0a42661659fd16d96d4a6411d7160da2e0b14c9d913b584acfa867bc21483957507c4774040c1aef051b2523ab2a8e5630e5d980884763022476b575b0bb0de00ceca7cf9a59a4590626b770185d440b67daf978c76847df5691302af1a499978d1bb84a88e7c8ab210d3d1a102b1063b9734eb224fdbdbbf558761e79074b7838ac2187b6dcf9e0a80a5e93d99810f8b39eb62edd1c8990c01fd07534adaff09412a63a2ea3b887b5a4c680062fbea4f537b0f7047b9a32b8f6ac45a5137ca3ca0f7b96ef01ff021485a8daa423f2c05f190a6ffa7eca5262c323ddb39f1f0bc6de77f762b0def5dc42c809b2d647924f8abec892cb7b8da635e3ddaee5a522d1aa8bae711573e8ad1c6c2a6fcbc0dab4201357549c66d0e9a9be744c334b373007a1d7bab3e77f9b499befb0bc868ffada261fed96a2cff3cd25c33a95edb8c5c2526d735c543a76f578d5f9177d7316d0e7b4644735e9fefa500f9ee7f69f2beaa4e1deb408bed2c9cc412995e0e061e0c017e8aaaf8590ec01716a5ed28138bd867546361e8c19cf1d4f224d8a9c72d1d935b51dc406b1798b219c99f0e44e61151d19711977bcc9ed6d6f5fe3d758130a52999fa9bc1e724679dc736c3288b4544000f9deff8580e333b8aa6fae4dbb6e9cf932e32e170b7c1b2fb2a3e96b925f24d25a20437c76777495eb0b520e329ebeaf1a44460f0e146f6d61976488b920617eeb7652641015d48eb8385dc9a753cc5d06e5408541c553cddc12e5e7ec69f294e46e32643dce45df7cf27e0ce20ef25dd5030b61f4b6eac36e724f5bcab194c0a0451ce4bc877f6ae0d376e1dfc28d1b7f28822f03b6df051efbb5928ad936a3d9368d253fbc195ffabd059da9ff3087cfa0d430e6baec129e7f317ea175ff2a46741a48691bfd302a5561d395d035365b8d745f05cfc6d6fc87298e26a4a978764d3e70853b1d42a03cd8cc2c3594e3d032b6e5c7c0b81f15a3604daa473cdc4122e917cdb74e7229a1547048307c28ef39328c0efdf0859b44537dee125149494c9eda57d4a5a47906513b9ffb76bf64b7306f91a697231b5d0254ba70544111b96cf4f4087d2efcb26703c4c2a165bc5c2fa2f7b2d1b181d184889a0dffb584d9e32abf81780fdd9e85792f7280d60811c4c0f49690248a0fdeed5692da713777af852c090c5cd050dc67d818bebdd28f7a876d36a08d2daf005b91f1d590e9f0c27f2a33')

# Split into ciphertext and tag (last 16 bytes)
data = ciphertext[:-16]
tag = ciphertext[-16:]

# Decrypt with the corrected nonce
aesgcm = AESGCM(shared_secret)
plaintext = aesgcm.decrypt(nonce, data + tag, None)  # Ensure nonce is 12 bytes

print("Decrypted Message:", plaintext.decode('utf-8'))